{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prakat-L-061\\\\Desktop\\\\dalrada-dashboard\\\\src\\\\components\\\\Dashboard\\\\dashboard.js\";\nimport React from 'react';\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [44, 55, 13, 33],\n      options: {\n        chart: {\n          width: 380,\n          type: 'donut'\n        },\n        dataLabels: {\n          enabled: false\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            chart: {\n              width: 200\n            },\n            legend: {\n              show: false\n            }\n          }\n        }],\n        legend: {\n          position: 'right',\n          offsetY: 0,\n          height: 230\n        }\n      }\n    };\n  }\n\n  appendData() {\n    var arr = this.state.series.slice();\n    arr.push(Math.floor(Math.random() * (100 - 1 + 1)) + 1);\n    this.setState({\n      series: arr\n    });\n  }\n\n  removeData() {\n    if (this.state.series.length === 1) return;\n    var arr = this.state.series.slice();\n    arr.pop();\n    this.setState({\n      series: arr\n    });\n  }\n\n  randomize() {\n    this.setState({\n      series: this.state.series.map(function () {\n        return Math.floor(Math.random() * (100 - 1 + 1)) + 1;\n      })\n    });\n  }\n\n  reset() {\n    this.setState({\n      series: [44, 55, 13, 33]\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"chart-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"donut\",\n      width: 380,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.appendData(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"+ ADD\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.removeData(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"- REMOVE\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.randomize(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"RANDOMIZE\"), \"\\xA0\", React.createElement(\"button\", {\n      onClick: () => this.reset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"RESET\")));\n  }\n\n}\n\nconst domContainer = document.querySelector('#app');\nReactDOM.render(React.createElement(ApexChart), domContainer);\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/Prakat-L-061/Desktop/dalrada-dashboard/src/components/Dashboard/dashboard.js"],"names":["React","Dashboard","Component","constructor","props","state","series","options","chart","width","type","dataLabels","enabled","responsive","breakpoint","legend","show","position","offsetY","height","appendData","arr","slice","push","Math","floor","random","setState","removeData","length","pop","randomize","map","reset","render","domContainer","document","querySelector","ReactDOM","createElement","ApexChart"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass Dashboard extends React.Component {\r\n  \r\n            constructor(props) {\r\n          super(props);\r\n\r\n          this.state = {\r\n          \r\n            series: [44, 55, 13, 33],\r\n            options: {\r\n              chart: {\r\n                width: 380,\r\n                type: 'donut',\r\n              },\r\n              dataLabels: {\r\n                enabled: false\r\n              },\r\n              responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                  chart: {\r\n                    width: 200\r\n                  },\r\n                  legend: {\r\n                    show: false\r\n                  }\r\n                }\r\n              }],\r\n              legend: {\r\n                position: 'right',\r\n                offsetY: 0,\r\n                height: 230,\r\n              }\r\n            },\r\n          \r\n          \r\n          };\r\n        }\r\n\r\n      \r\n        appendData() {\r\n          var arr = this.state.series.slice()\r\n          arr.push(Math.floor(Math.random() * (100 - 1 + 1)) + 1)\r\n        \r\n          this.setState({\r\n            series: arr\r\n          })\r\n        }\r\n        \r\n        removeData() {\r\n          if(this.state.series.length === 1) return\r\n          \r\n          var arr = this.state.series.slice()\r\n          arr.pop()\r\n        \r\n          this.setState({\r\n            series: arr\r\n          })\r\n        }\r\n        \r\n        randomize() {\r\n          this.setState({\r\n            series: this.state.series.map(function() {\r\n              return Math.floor(Math.random() * (100 - 1 + 1)) + 1\r\n            })\r\n          })\r\n        }\r\n        \r\n        reset() {\r\n          this.setState({\r\n            series: [44, 55, 13, 33]\r\n          })\r\n        }\r\n      \r\n\r\n        render() {\r\n          return (\r\n            \r\n\r\n<div>\r\n<div class=\"chart-wrap\">\r\n<div id=\"chart\">\r\n<ReactApexChart options={this.state.options} series={this.state.series} type=\"donut\" width={380} />\r\n</div>\r\n</div>\r\n<div class=\"actions\">\r\n<button\r\nonClick={() => this.appendData()}\r\n>\r\n+ ADD\r\n</button>\r\n&nbsp;\r\n<button\r\nonClick={() => this.removeData()}\r\n>\r\n- REMOVE\r\n</button>\r\n&nbsp;\r\n<button\r\nonClick={() => this.randomize()}\r\n>\r\nRANDOMIZE\r\n</button>\r\n&nbsp;\r\n<button\r\nonClick={() => this.reset()}\r\n>\r\nRESET\r\n</button>\r\n</div>\r\n</div>\r\n\r\n          );\r\n        }\r\n      }\r\n\r\n      const domContainer = document.querySelector('#app');\r\n      ReactDOM.render(React.createElement(ApexChart), domContainer);\r\n    \r\n            \r\n        \r\n\r\n\r\n\r\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}